#!/usr/bin/env ruby -w
# encoding: GBK

require 'openssl'
require 'win32_filetime'
W = Win32ft

trap "SIGINT" do
  STDERR.puts "\nexit on Ctrl-C."
  exit 1
end

def rolloldtime(d1, logf)
  logf = File.absolute_path(logf)
  c_ds = 0
  c_fs = 0
  STDERR.puts "trying chdir #{d1} .."
  Dir.chdir(d1) do
    File.foreach(logf) do |line|
      line.strip!
      next if line.empty?
      p1 = line.index(/( 0x\w{16}){3} \d+$/)
      p1 = line.index(/( \d{4}\-\d{2}\-\d{2} \d{2}:\d{2}:\d{2}\.\d+){3} \d+$/) if !p1
      next if !p1

      fn = line[0...p1]
      next if $just_dir && !File.directory?(fn)
      if File.file?(fn)
        c_fs += 1
      elsif File.directory?(fn)
        c_ds += 1
      else
        next
      end

      ss = line[p1..-1]
      tstr = '\d{4}\-\d{2}\-\d{2} \d{2}:\d{2}:\d{2}\.\d+'
      if ss =~ / (0x\w{16}) (0x\w{16}) (0x\w{16}) (\d+)$/
        tc1,ta1,tm1,_sz1 = $1, $2, $3, $4
      elsif ss =~ / (#{tstr}) (#{tstr}) (#{tstr}) (\d+)$/
        tc1,ta1,tm1,_sz1 = $1, $2, $3, $4
      end
      W.setfiletime(fn, tc1, ta1, tm1) rescue STDERR.puts "\n Error! #{fn}"
    end
  end if File.directory?(d1)
  STDERR.puts " Restoreoldtimes \"#{d1}\"   dirs: #{c_ds}  files: #{c_fs}"
  c_fs
end

def main
  $just_dir = ARGV.delete('-o') ? true : false
  if (ARGV & %w{-h --help}).size > 0 || ARGV.size != 2
    STDERR.puts "Syntax: restoreoldtimes.rb  Dir1 file.log  [ -o ] # -o just_dir "
    exit 1
  end
  if !File.directory?(ARGV[0]) || !File.file?(ARGV[1])
    STDERR.puts "Syntax:  Dir1  file.log.\n   using file.log restore directory files times"
  end
  rolloldtime(ARGV[0], ARGV[1])
end

main
